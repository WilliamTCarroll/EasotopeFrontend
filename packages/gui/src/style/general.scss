$back-color: white;
$back-err: red;
$back-hover: slateblue;
$sticky-width: 100px;
$nav-height: 20px;

.slot-parent {
    padding-top: $nav-height * 4;
}

nav {
    position: fixed;
    height: $nav-height;
    background-color: $back-color;
    padding-left: 10px;
    top: 0;
    left: 0;
    right: 0;
    z-index: 20;
}
.fixed-full-width {
    position: fixed;
    top: $nav-height;
    left: 10px;
}

.error {
    color: black;
    text-align: center;
    * {
        background-color: $back-err;
    }
}

#table {
    font-family: Arial, Helvetica, sans-serif;
    // Actually displays borders when using this VS `border-collapse`
    border-spacing: 0px;
    // Requried for Sticky elements and Chrome
    display: inline-block;

    & tr {
        background-color: $back-color;
        &:nth-child(even) {
            background-color: darken($color: $back-color, $amount: 30);
        }
        &.disabled-row {
            color: darkslategray;
            text-decoration: line-through;
            background-color: darken($color: $back-color, $amount: 50);
            z-index: 2;
        }
        &:hover {
            background-color: $back-hover;
        }
    }
    td,
    th {
        border: 1px solid black;
        padding: 4px;
        white-space: nowrap;
    }
}
#table .sticky {
    position: -webkit-sticky;
    position: sticky;
    z-index: 3;
    background-color: #04aa6d;
    // Ensure we have enough sticky entries, each aware of the last one
    @for $i from 1 through 5 {
        &:nth-child(#{$i}) {
            min-width: $sticky-width;
            left: #{$sticky-width * ($i - 1)};
        }
    }
}

#table th.sticky {
    z-index: 10;
    margin-top: auto;
}
#table th {
    text-align: left;
    background-color: #04aa6d;
    color: white;
    position: -webkit-sticky;
    position: sticky;
    top: $nav-height;
    z-index: 3;
}
